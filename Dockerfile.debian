# Base image: Debian 12
FROM debian:12

LABEL app="EpiBuilder"
LABEL version="2.0"
LABEL description="Bioinformatic tools environment for epitope prediction"

# Install system dependencies
RUN apt-get update && apt-get install --no-install-recommends -y \
    python3 python3-pip \
    libgomp1 \
    git \
    unzip \
    nano \
    curl \
    openjdk-21-jdk \
    wget \
    default-jdk \
    bash \
    coreutils \
    gnupg \
    ca-certificates \
    nginx \
 && apt-get clean && rm -rf /var/lib/apt/lists/*

# Alias 'python' to 'python3'
RUN ln -s $(which python3) /usr/bin/python

# Install Nextflow
RUN curl -s https://get.nextflow.io | bash && mv nextflow /usr/local/bin/

# Install Python requirements
COPY requirements.txt /
RUN pip3 install --no-cache-dir -r /requirements.txt

# Copy backend JAR
COPY backend/epibuilder-backend.jar /epibuilder/epibuilder-backend.jar

# Copy core JAR used by Nextflow
COPY sources/epibuilder-core/target/epibuilder-core.jar /epibuilder/epibuilder-core.jar

# Copy compiled Angular frontend
COPY frontend/dist/epibuilder-frontend/ /var/www/html/

# NGINX configuration
RUN rm /etc/nginx/sites-enabled/default
COPY nginx.conf /etc/nginx/sites-enabled/default

# Clone and install AlgPred2
RUN git clone https://github.com/raghavagps/algpred2.git /algpred2
WORKDIR /algpred2
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy and unzip BePiPred3 tool
COPY bepipred3.zip /
RUN unzip /bepipred3.zip -d /bepipred3 && rm /bepipred3.zip

# Copy BLAST tools
COPY blast/blastp /usr/bin/
COPY blast/makeblastdb /usr/bin/

# Install ESM models
COPY esm_encodings.tar.gz /
RUN tar -xzf esm_encodings.tar.gz && rm esm_encodings.tar.gz

RUN mkdir -p /models/
RUN curl -L https://dl.fbaipublicfiles.com/fair-esm/regression/esm2_t33_650M_UR50D-contact-regression.pt -o /models/esm2_t33_650M_UR50D-contact-regression.pt
RUN curl -L https://dl.fbaipublicfiles.com/fair-esm/models/esm2_t33_650M_UR50D.pt -o /models/esm2_t33_650M_UR50D.pt

# Add test input/output files
COPY input.fasta /test/input.fasta
COPY raw_output.csv /test/raw_output.csv

# Reset workdir
WORKDIR /

# Expose frontend and backend ports
EXPOSE 80 8080

# Start services
CMD service nginx start && java -jar /epibuilder/epibuilder-backend.jar