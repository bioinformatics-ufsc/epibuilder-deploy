# Base image: Debian 11
FROM debian:11

LABEL app="EpiBuilder"
LABEL version="2.0"
LABEL description="Bioinformatic tools environment for epitope prediction"

# Install system dependencies
RUN apt-get update
RUN apt install --no-install-recommends python3 python3-pip libgomp1 git unzip nano wget nginx curl mariadb-server -y

RUN apt clean -y
RUN rm -rf /var/lib/apt/lists/*

# Set Python alias
RUN ln -s $(which python3) /usr/bin/python

RUN wget -P /tmp https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.16.0+-x64-linux.tar.gz
RUN tar -xzf /tmp/ncbi-blast-2.16.0+-x64-linux.tar.gz -C /tmp
RUN mv /tmp/ncbi-blast-2.16.0+/bin/blastp /usr/local/bin
RUN mv /tmp/ncbi-blast-2.16.0+/bin/makeblastdb /usr/local/bin
RUN rm -rf /tmp/ncbi-blast-2.16.0+
RUN rm /tmp/ncbi-blast-2.16.0+-x64-linux.tar.gz

# Install OpenJDK 21 manually via Adoptium
RUN wget -P /tmp https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.tar.gz
RUN tar -xzf /tmp/jdk-21_linux-x64_bin.tar.gz -C /usr/local

ENV PATH="/usr/local/jdk-21.0.6/bin:${PATH}"
ENV JAVA_HOME="/usr/local/jdk-21.0.6"

# Set working directory
WORKDIR /opt/tools

# Install Nextflow
RUN curl -s -o nextflow https://get.nextflow.io
RUN chmod +x nextflow
RUN mv nextflow /usr/local/bin/nextflow
ENV PATH="/usr/local/bin/nextflow:${PATH}"

# Copy NextFlow pipeline script
COPY pipeline/ /pipeline/

# Copy backend and core JAR files
COPY backend/epibuilder-backend.jar /epibuilder/epibuilder-backend.jar
COPY sources/epibuilder-core/target/epibuilder-core.jar /epibuilder/epibuilder-core.jar

# Copy compiled frontend
COPY frontend/dist/epibuilder-frontend/browser/ /var/www/html/

# NGINX configuration
RUN rm /etc/nginx/sites-enabled/default
COPY nginx.conf /etc/nginx/sites-enabled/default

# Clone and setup AlgPred2
# RUN git clone https://github.com/raghavagps/algpred2.git /algpred2

# Copy and unzip BePiPred3
COPY bepipred3.zip /tmp/bepipred3.zip
RUN unzip /tmp/bepipred3.zip -d /
RUN rm /tmp/bepipred3.zip

WORKDIR /

# Install ESM models
RUN pip3 install --no-cache-dir -r requirements.txt

RUN mkdir /models/
RUN curl https://dl.fbaipublicfiles.com/fair-esm/regression/esm2_t33_650M_UR50D-contact-regression.pt -o /models/esm2_t33_650M_UR50D-contact-regression.pt
RUN curl https://dl.fbaipublicfiles.com/fair-esm/models/esm2_t33_650M_UR50D.pt -o /models/esm2_t33_650M_UR50D.pt

# Copy input and output test files
COPY input.fasta /test/input.fasta
COPY raw_output.csv /test/raw_output.csv

# Copy entrypoint script and set permissions
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
RUN /bin/bash

WORKDIR /

# Expose frontend and backend ports
EXPOSE 80
EXPOSE 8080

CMD ["/entrypoint.sh"]
